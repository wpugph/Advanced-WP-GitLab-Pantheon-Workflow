stages:
  - build
  - test
  - deploy

image: tetraweb/php

cache:
  paths:
  - vendor/

before_script:
  - apt-get update
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  - php composer.phar install

build:
  stage: build
  cache:
    key: bundles
    paths:
    - web/wp-content/themes/bower_components
    - web/wp-content/themes/node_modules
  script:
  - echo "Building the app"
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - composer update
  allow_failure: true

test:
  stage: test
  cache:
    key: bundles
    paths:
    - web/wp-content/themes/bower_components
    - web/wp-content/themes/node_modules
  script:
  # - pwd
  # - ls
  - export PHPCS_DIR=vendor/squizlabs/php_codesniffer
  - export SNIFFS_DIR=vendor/wp-coding-standards/wpcs
  - $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR
  - $PHPCS_DIR/bin/phpcs -i
  - $PHPCS_DIR/bin/phpcs -p wordpress/wp-content/themes/jnetics --standard=WordPress --ignore=*gulpfile.js*,*/assets/*
  allow_failure: true

prod_deploy:
  stage: deploy
  cache:
    key: bundles
    paths:
    - web/wp-content/themes/bower_components
    - web/wp-content/themes/node_modules
  script:
  - echo "Preparing build for deploy"
  - ROOTPWD=$PWD
  - echo $ROOTPWD
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - cd $ROOTPWD/wordpress/wp-content/themes/jnetics
  - npm install -g npm@latest
  - npm install -g gulp bower
  - npm install
  - bower install --allow-root
  - gulp --production
  - ls assets/css
  - echo "We need to put the gulp build here and only transfer assets, option for full or partial build!!"
  - cd $ROOTPWD
  - ROOTPWD=$PWD
  - echo $ROOTPWD
  - touch /root/.ssh/idrsa
  - echo "$STAGING_PRIVATE_KEY" > /root/.ssh/idrsa
  - chmod 400 /root/.ssh/idrsa
  # - cat /root/.ssh/idrsa
  - cd /root/.ssh/
  - ls
  - ssh-add /root/.ssh/idrsa
  - ssh-add -l
  - cd $ROOTPWD
  - ls
  # - rm wordpress/wp-content/themes/jnetics/bower_components -R
  # - rm wordpress/wp-content/themes/jnetics/node_modules -R
  # - rm wordpress/wp-content/themes/jnetics/src -R
  # - rm wordpress/wp-content/themes/jnetics/.editorconfig -R
  # - rm wordpress/wp-content/themes/jnetics/gulpfile.js -R
  # - rm wordpress/wp-content/themes/jnetics/*.json -R
  # - scp -P 7822 -C -i /root/.ssh/idrsa -r web/app/wp-content/themes/jnetics jneticsmlawebdes@jnetics.mlawebdesigns.co.uk:public_html/wp-content/themes
  # - rsync -avzh -e "ssh -p 7822" wordpress/wp-content/themes/jnetics jneticsmlawebdes@jnetics.mlawebdesigns.co.uk:public_html/wp-content/themes --ignore-times
  # https://pantheon.io/docs/rsync-and-sftp/
  - export ENV=dev
  # Usually dev, test, or live
  - export SITE=559216e4-889e-4d78-92f1-36e45a7318a9
  # Site UUID from dashboard URL: https://dashboard.pantheon.io/sites/[uuid]

  # To Upload/Import
  - rsync -rLvz --size-only --ipv4 --progress -e 'ssh -p 2222' ./web/. --temp-dir=~/tmp/ $ENV.$SITE@appserver.$ENV.$SITE.drush.in:web/

  artifacts:
    paths:
    - web
    expire_in: 1 week
  environment:
    name: production
    url: http://dev-carlwpsecuritymu.pantheonsite.io/
  only:
  - master
